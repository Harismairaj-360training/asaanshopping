<?php
use Magento\Framework\App\Action\Action;

// @codingStandardsIgnoreFile

/**
 * Product list template
 *
 * @var $block \Magento\Catalog\Block\Product\ListProduct
 */
?>
<?php
    $_productCollection = $block->getLoadedProductCollection();
    $collectionSize = $_productCollection->count();
?>
<?php if (!$collectionSize): ?>
    <div class="message info empty"><div><?php /* @escapeNotVerified */ echo __('We can\'t find products matching the selection.') ?></div></div>
<?php else: ?>
    <?php
    // Hide toolbar
    $hideToolbar = false;
    if ($block->getData('hide_toolbar'))
    {
        $hideToolbar = true;
    }
    ?>
    <?php if (!$hideToolbar): ?>
        <?php echo $block->getToolbarHtml() ?>
    <?php endif; ?>
    <?php echo $block->getAdditionalHtml() ?>
    <?php
    $_helper = $this->helper('Magento\Catalog\Helper\Output');
    $theme = $this->helper('Infortis\Base\Helper\Data');
    $helperLabels = $this->helper('Infortis\Base\Helper\Labels');
    $helperImage = $this->helper('Infortis\Infortis\Helper\Image');
    $helperAddToLinks = $this->helper('Infortis\Base\Helper\AddToLinks');

    $objectManager   =  \Magento\Framework\App\ObjectManager::getInstance();
    $media_url   =  $objectManager->get('Magento\Store\Model\StoreManagerInterface')->getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
    $catalog_url  = "catalog/product";
    $image_full_path = $media_url.$catalog_url;

    // Get mode
    $mode = $block->getData('mode');
    if ($mode === NULL)
    {
        $mode = $block->getMode();
    }

    // Variables for both modes
    $gc = $theme->getCfgGroup('category_grid');

    // Vars for only one mode - but because the HTML is shared by both modes
    // the vars need to be declared no matter what mode it is.
    $listMode = false;
    $itemgridClasses = '';
    $productNameClasses = '';
    $actionsClasses = '';
    $swatchesExist = null; // TODO: only for grid mode

    // List mode
    if ($mode == 'list')
    {
        $listMode = true;
        $viewMode = 'list';
        $imageTypeId = 'category_page_list';
        $showDescription = true;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::FULL_VIEW;
        $wrapperClasses = " {$viewMode} products-list products-list-ext";

        // List classes
        if ($theme->getCfg('category_list/hover_effect'))
        {
            $wrapperClasses .= ' hover-effect';
        }

        // "Add to" links
        $addtolinksPosition = false; //$theme->getCfg('category_list/addtolinks_position');
        $displayAddtolinks = 1;
    }
    else // Grid mode
    {
        $viewMode = 'grid';
        $imageTypeId = 'itemgrid_category_page_grid'; // Image dimensions declared in this entry (in view.xml) override Magento's default dimensions

        $showDescription = false;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
        $wrapperClasses = " {$viewMode} items-grid items-grid-partitioned category-products-grid";
        $itemgridClasses = ' itemgrid';

        // If "column count" param is set, add classes for adaptive grid: itemgrid-adaptive and itemgrid-(X)col
        $gridColumnCount = $this->getData('grid_column_count');
        if ($gridColumnCount !== null)
        {
            $gridColumnCount = intval($gridColumnCount);
            $itemgridClasses .= " itemgrid-adaptive itemgrid-{$gridColumnCount}col";
        }

        // Grid classes
        if ($gc['display_name'] == 1 && $gc['display_name_single_line'] == true)
            $wrapperClasses .= ' single-line-name';
        if ($gc['display_name'] == 2)
            $productNameClasses .= ' display-onhover';
        if ($gc['centered'])
            $wrapperClasses .= ' centered';
        if ($gc['hover_effect'])
            $wrapperClasses .= ' hover-effect';
        if ($gc['equal_height'])
            $wrapperClasses .= ' equal-height';

        // Size of item's elements
        $size = $this->getData('size');
        if ($size !== null)
        {
            $size = strtolower($size);
            $wrapperClasses .= ' size-' . $size;
        }
        else
        {
            if ($gc['elements_size'])
            {
                $wrapperClasses .= ' size-' . $gc['elements_size'];
            }
        }

        // If "Add to cart" button was set as "Display on hover", add proper class
        if ($gc['display_addtocart'] == 2)
        {
            $actionsClasses = ' display-onhover';
        }

        // "Add to" links
        $addtolinksPosition = $gc['addtolinks_position'];
        $displayAddtolinks = $gc['display_addtolinks'];

    } // end: grid mode

    // Product image dimensions
    $paramImgWidth = $this->getData('img_width');
    $paramImgHeight = $this->getData('img_height');
    if ($paramImgWidth || $paramImgHeight)
    {
        // Use values from params
        $imgWidth = intval($paramImgWidth);
        $imgHeight = intval($paramImgHeight);
    }
    else
    {
        // Get values from config
        if ($mode == 'list') // List mode
        {
            $imgWidth = intval($theme->getCfg('category_list/image_width'));
            $imgHeight = intval($theme->getCfg('category_list/image_height'));
        }
        else // Grid mode
        {
            $imgWidth = intval($theme->getCfg('category_grid/image_width'));
            $imgHeight = intval($theme->getCfg('category_grid/image_height'));
        }
    }

    // If value equals zero or not set, replace it with null
    if (empty($imgWidth))
    {
        $imgWidth = null;
    }
    if (empty($imgHeight))
    {
        $imgHeight = null;
    }

    // Number of dimensions
    $imageDimensions = 0;
    if (empty($imgWidth) && empty($imgHeight)) // No dimensions specified
    {
        $imageDimensions = 0;
    }
    elseif (!empty($imgWidth) && !empty($imgHeight)) // Both dimensions specified
    {
        $imageDimensions = 2;
    }
    else // Only one dimension specified
    {
        $imageDimensions = 1;
    }

    // Alternative product image
    $showAltImage = $theme->getCfg('category/alt_image');

    // Product labels classes
    $wrapperClasses .= ' ' . $helperLabels->getLabelsClasses();
    ?>
    <div class="products wrapper<?php if ($wrapperClasses) echo $wrapperClasses; ?>">
        <ol class="products list items product-items<?php if ($itemgridClasses) echo $itemgridClasses; ?>">
            <?php /** @var $_product \Magento\Catalog\Model\Product */ ?>
            <?php foreach ($_productCollection as $_product):
              $imgUrl = $_product->getResource()->getAttribute('image')->getFrontend()->getValue($_product);
              $imgstyle = '';
              if(isset($imgUrl))
              {
                $imgstyle = 'style="background-image:url('.$image_full_path.$imgUrl.')"';
              }
            ?>
            <li class="item product product-item">

                <!-- Begin - Vendor specified category -->
                <a href="<?php /* @escapeNotVerified */ echo $_product->getProductUrl() ?>">
                  <div class="ban ban-effect-1 ban-caption-fade-out">
                    <div class="tile-image" <?php echo $imgstyle;?>></div>
                    <div class="cap cap-bottom-left" style="background-color: rgba(30, 195, 123, 0.7);">
                      <h2><?php /* @escapeNotVerified */ echo $_helper->productAttribute($_product, $_product->getName(), 'name'); ?></h3>
                      <p><?php /* @escapeNotVerified */ echo $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?></p>
                    </div>
                  </div>
                  <div>
                  <?php $reviewsSummaryHtml = $block->getReviewsSummaryHtml($_product, $templateType); ?>
                  <?php if ($reviewsSummaryHtml): ?>
                      <?php if ($gc['display_rating'] == 2): // Display on hover ?>
                          <div class="display-onhover product-reviews-wrapper"><?php echo $reviewsSummaryHtml; ?></div>
                      <?php elseif ($gc['display_rating'] == 1): // Always display ?>
                          <?php echo $reviewsSummaryHtml; ?>
                      <?php endif; ?>
                  <?php endif; ?>
                  </div>
                </a>
                <!-- End - Vendor specified category -->

            </li>
            <?php endforeach; ?>
        </ol>
    </div>
    <?php if (!$hideToolbar): ?>
        <?php echo $block->getToolbarHtml() ?>
    <?php endif; ?>
    <?php if ($swatchesExist): ?>
        <script type="text/javascript">
            requirejs(['jquery'], function(jQuery) {
                var checkSwatchExistInterval = setInterval(function() {
                    if (jQuery('.swatch-opt-<?php echo $swatchesExist; ?> > .swatch-attribute').length)
                    {
                        jQuery(document).trigger('last-swatch-found');
                        clearInterval(checkSwatchExistInterval);
                    }
                }, 200);
            });
        </script>
    <?php endif; ?>
    <?php if (!$block->isRedirectToCartEnabled()) : ?>
        <script type="text/x-magento-init">
        {
            "[data-role=tocart-form], .form.map.checkout": {
                "catalogAddToCart": {}
            }
        }
        </script>
    <?php endif; ?>
<?php endif; ?>
